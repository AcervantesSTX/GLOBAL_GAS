FORMAT: 1A
HOST: https://globalgas.com

# Global Gas - C2

## CAT.EMPLEADOS [/cat.empleados]

### REPLICAR [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.GLOBALNET

#### Acciones

- IF m_EMPLEADOS = GLOBAL_GAS.BE:C2.LIBRARY.GLOBALNET.DESCARGAR_EMPLEADOS ()
    - GLOBAL_GAS.BE:C3.STEP.CAT_EMPLEADOS.ELIMINAR_TODOS ()
    - FOREACH m_EMPLEADO AS m_UN_EMPLEADO
        - GLOBAL_GAS.BE:C3.STEP.CAT.EMPLEADOS.AGREGAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, NOMBRE, NUMERO, TELEFONO, IMAGEN)
            - ID_GLOBALNET: m_UN_EMPLEADO.ID_GLOBALNET
            - FECHA_ULTIMA_MODIFICACION: m_UN_EMPLEADO.FECHA_ULTIMA_MODIFICACION
            - NOMBRE: m_UN_EMPLEADO.NOMBRE
            - NUMERO: m_UN_EMPLEADO.NUMERO
            - TELEFONO: m_UN_EMPLEADO.TELEFONO
            - IMAGEN: m_UN_EMPLEADO.IMAGEN

#### Retorno

- N/A

## CAT.UNIDADES [/cat.unidades]

### REPLICAR [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.GLOBALNET

#### Acciones

- IF m_UNIDADES = GLOBAL_GAS.BE:C2.LIBRARY.GLOBALNET.DESCARGAR_UNIDADES ()
    - GLOBAL_GAS.BE:C3.STEP.CAT_UNIDADES.ELIMINAR_TODAS ()
    - FOREACH m_UNIDADES AS m_UNA_UNIDAD
        - GLOBAL_GAS.BE:C3.STEP.CAT.UNIDADES.AGREGAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, NUMERO_ECONOMICO, ID_CHOFER, ID_AYUDANTE, ID_AYUDANTE_2, ID_RUTA, TIPO_UNIDAD, CUENTALITROS, ROTOGAUGE, DOTACION)
            - ID_GLOBALNET: m_UNA_UNIDAD.ID_GLOBALNET
            - FECHA_ULTIMA_MODIFICACION: m_UNA_UNIDAD.FECHA_ULTIMA_MODIFICACION
            - NUMERO_ECONOMICO: m_UNA_UNIDAD.NUMERO_ECONOMICO
            - ID_CHOFER: m_UNA_UNIDAD.ID_CHOFER
            - ID_AYUDANTE: m_UNA_UNIDAD.ID_AYUDANTE
            - ID_AYUDANTE_2: m_UNA_UNIDAD.ID_AYUDANTE_2
            - ID_RUTA: m_UNA_UNIDAD.ID_RUTA
            - TIPO_UNIDAD: m_UNA_UNIDAD.TIPO_UNIDAD
            - CUENTALITROS: m_UNA_UNIDAD.CUENTALITROS
            - ROTOGAUGE: m_UNA_UNIDAD.ROTOGAUGE
            - DOTACION : m_UNA_UNIDAD.DOTACION

#### Retorno

- N/A

## OPE.SESION [/ope.sesion]

### INICIAR [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO

#### Acciones

- TRY
    - o_EMPLEADO = NEW EMPLEADO (NUMERO)
        - NUMERO: PARAM.EMPLEADO
    - o_EMPLEADO.VALIDAR_APIKEY (APIKEY)
        - APIKEY: PARAM.APIKEY
- CATCH
    - RETHROW
- e_JWT = GLOBAL_GAS.BE:C3.STEP.OPE.SESION.INICIAR (ID_GLOBALNET_EMPLEADO)
    - ID_GLOBALNET_EMPLEADO: o_EMPLEADO.ID_GLOBALNET

#### Retorno

- e_JWT

#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.CONSTRUCTOR.NUMERO_INEXISTENTE
- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.VALIDAR_APIKEY.APIKEY_INCORRECTO

+ Attributes
    - EMPLEADO
    - APIKEY

### DEPURAR [POST]

#### Acciones

- GLOBAL_GAS.BE:C3.STEP.OPE.SESION.DEPURAR ()

#### Retorno

- N/A

## OPE.SINCRONIZACION_APLICACION [/ope.sincronizacion_aplicacion]

### CARGAR [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD
- GLOBAL_GAS.BE:C2.LIBRARY.SERVICIO
- GLOBAL_GAS.BE:C2.LIBRARY.CUENTA_OCULTA

#### Acciones

- FOREACH PARAM.DETALLES AS m_UN_DETALLE
    - SWITCH m_UN_DETALLE.TIPO
        - CASE 'SERVICIOS.EN_PROCESO'
            - TRY
                - o_SERVICIO = NEW SERVICIO (ID_GLOBALNET)
                    - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                - o_SERVICIO.VALIDAR_PROPIETARIO ()
            - CATCH
                - CONTINUE
            - IF substr(m_UN_DETALLE.FECHAHORA, 0, 10) != date('Y-m-d')
                - CONTINUE
            - GLOBAL_GAS.BE:C3.STEP.OPE.SERVICIOS.EN_PROCESO (ID_GLOBALNET, FECHAHORA, ID_GLOBALNET_UNIDAD)
                - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                - FECHAHORA: m_UN_DETALLE.FECHAHORA
                - ID_GLOBALNET_UNIDAD: o_SERVICIO.ID_GLOBALNET_UNIDAD
        - CASE 'SERVICIOS.CANCELAR'
            - TRY
                - o_SERVICIO = NEW SERVICIO (ID_GLOBALNET)
                    - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                - o_SERVICIO.VALIDAR_PROPIETARIO ()
            - CATCH
                - CONTINUE
            - IF substr(m_UN_DETALLE.FECHAHORA, 0, 10) != date('Y-m-d')
                - CONTINUE
            - GLOBAL_GAS.BE:C3.STEP.OPE.SERVICIOS.CANCELAR (ID_GLOBALNET, FECHAHORA, ID_GLOBALNET_UNIDAD, RAZON_CANCELACION)
                - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                - FECHAHORA: m_UN_DETALLE.FECHAHORA
                - ID_GLOBALNET_UNIDAD: o_SERVICIO.ID_GLOBALNET_UNIDAD
                - RAZON_CANCELACION: m_UN_DETALLE.RAZON_CANCELACION
        - CASE 'NOTAS.AGREGAR'
            - IF substr(m_UN_DETALLE.FECHAHORA, 0, 10) != date('Y-m-d')
                - CONTINUE
            - IF m_UN_DETALLE.ID_GLOBALNET_SERVICIO
                - TRY
                    - o_SERVICIO = NEW SERVICIO (ID_GLOBALNET)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET_SERVICIO
                    - o_SERVICIO.VALIDAR_PROPIETARIO ()
                    - o_SERVICIO.VALIDAR_CLIENTE (CLIENTE)
                        - CLIENTE: m_UN_DETALLE.CLIENTE
                    - o_SERVICIO.VALIDAR_CUENTA (CUENTA)
                        - CUENTA: m_UN_DETALLE.CUENTA
                - CATCH
                    - CONTINUE
            - IF m_UN_DETALLE.ID_GLOBALNET_CUENTA_OCULTA
                - TRY
                    - o_CUENTA_OCULTA = NEW CUENTA_OCULTA (ID_GLOBALNET)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET_CUENTA_OCULTA
                    - o_CUENTA_OCULTA.VALIDAR_PROPIETARIO ()
                    - o_CUENTA_OCULTA.VALIDAR_DISPONIBLE ()
                - CATCH
                    - CONTINUE
            - GLOBAL_GAS.BE:C3.STEP.OPE.NOTAS.AGREGAR (ID_GLOBALNET_UNIDAD, FECHAHORA, CLIENTE, CUENTA, FOLIO, MONTO, TIPO_PAGO, DESCUENTO, LATITUD, LONGITUD, REFERENCIA, ID_GLOBALNET_SERVICIO, ID_GLOBALNET_CUENTA_OCULTA)
                - ID_GLOBALNET_UNIDAD: $GLOBALS['SYSTEM']['SECURITY']['UNIDAD'].ID_GLOBALNET
                - FECHAHORA: m_UN_DETALLE.FECHAHORA
                - CLIENTE: m_UN_DETALLE.CLIENTE
                - CUENTA: m_UN_DETALLE.CUENTA
                - FOLIO: m_UN_DETALLE.FOLIO
                - MONTO: m_UN_DETALLE.MONTO
                - TIPO_PAGO: m_UN_DETALLE.TIPO_PAGO
                - DESCUENTO: m_UN_DETALLE.DESCUENTO
                - LATITUD: m_UN_DETALLE.LATITUD
                - LONGITUD: m_UN_DETALLE.LONGITUD
                - REFERENCIA: m_UN_DETALLE.REFERENCIA
                - ID_GLOBALNET_SERVICIO: m_UN_DETALLE.ID_GLOBALNET_SERVICIO
                - ID_GLOBALNET_CUENTA_OCULTA: m_UN_DETALLE.ID_GLOBALNET_CUENTA_OCULTA

#### Retorno

- N/A

+ Attributes
    - DETALLES

## OPE.COLA_APLICACION [/ope.cola_aplicacion]

### DEPURAR [POST]

#### Acciones

- GLOBAL_GAS.BE:C3.STEP.OPE.COLA_APLICACION.DEPURAR ()

#### Retorno

- N/A

## OPE.LIQUIDACIONES [/ope.liquidaciones]

### ASIGNAR_INICIAL_ESTACIONARIO [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD

#### Acciones

- TRY
    - $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].VALIDAR_SUPERVISOR ()
    - o_UNIDAD = NEW UNIDAD (ID_GLOBALNET)
        - ID_GLOBALNET: PARAM.ID_GLOBALNET_UNIDAD
- CATCH
    - RETHROW
- IF substr(PARAM.FECHAHORA, 0, 10) != date('Y-m-d')
    - THROW GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.ASIGNAR_INICIAL_ESTACIONARIO.FECHAHORA_INVALIDA La fechahora especificada no corresponde al dia actual
- GLOBAL_GAS.BE:C3.STEP.OPE.LIQUIDACIONES.ASIGNAR_INICIAL_ESTACIONARIO (ID_GLOBALNET_UNIDAD, FECHAHORA, MEDIDOR_INICIAL, ROTOGAUGE_INICIAL)
    - ID_GLOBALNET_UNIDAD: PARAM.ID_GLOBALNET_UNIDAD
    - FECHAHORA: PARAM.FECHAHORA
    - MEDIDOR_INICIAL: PARAM.MEDIDOR_INICIAL
    - ROTOGAUGE_INICIAL: PARAM.ROTOGAUGE_INICIAL

#### Retorno

- N/A

#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.VALIDAR_SUPERVISOR.NO_SUPERVISOR
- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD.CONSTRUCTOR.UNIDAD_INEXISTENTE
- GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.ASIGNAR_INICIAL_ESTACIONARIO.FECHAHORA_INVALIDA

+ Attributes
    - ID_GLOBALNET_UNIDAD
    - FECHAHORA
    - MEDIDOR_INICIAL
    - ROTOGAUGE_INICIAL

### ASIGNAR_FINAL_ESTACIONARIO [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD

#### Acciones

- TRY
    - $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].VALIDAR_SUPERVISOR ()
    - o_UNIDAD = NEW UNIDAD (ID_GLOBALNET)
        - ID_GLOBALNET: PARAM.ID_GLOBALNET_UNIDAD
- CATCH
    - RETHROW
- IF substr(PARAM.FECHAHORA, 0, 10) != date('Y-m-d')
    - THROW GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.ASIGNAR_FINAL_ESTACIONARIO.FECHAHORA_INVALIDA La fechahora especificada no corresponde al dia actual
- GLOBAL_GAS.BE:C3.STEP.OPE.LIQUIDACIONES.ASIGNAR_FINAL_ESTACIONARIO (ID_GLOBALNET_UNIDAD, FECHAHORA, MEDIDOR_FINAL, ROTOGAUGE_FINAL)
    - ID_GLOBALNET_UNIDAD: PARAM.ID_GLOBALNET_UNIDAD
    - FECHAHORA: PARAM.FECHAHORA
    - MEDIDOR_FINAL: PARAM.MEDIDOR_FINAL
    - ROTOGAUGE_FINAL: PARAM.ROTOGAUGE_FINAL

#### Retorno

- N/A

#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.VALIDAR_SUPERVISOR.NO_SUPERVISOR
- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD.CONSTRUCTOR.UNIDAD_INEXISTENTE
- GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.ASIGNAR_FINAL_ESTACIONARIO.FECHAHORA_INVALIDA

+ Attributes
    - ID_GLOBALNET_UNIDAD
    - FECHAHORA
    - MEDIDOR_FINAL
    - ROTOGAUGE_FINAL

### VALIDAR_INICIAL_CILINDRO [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD

#### Acciones

- TRY
    - $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].VALIDAR_SUPERVISOR ()
    - o_UNIDAD = NEW UNIDAD (ID_GLOBALNET)
        - ID_GLOBALNET: PARAM.ID_GLOBALNET_UNIDAD
- CATCH
    - RETHROW
- IF substr(PARAM.FECHAHORA, 0, 10) != date('Y-m-d')
    - THROW GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.VALIDAR_INICIAL_CILINDRO.FECHAHORA_INVALIDA La fechahora especificada no corresponde al dia actual
- GLOBAL_GAS.BE:C3.STEP.OPE.LIQUIDACIONES.VALIDAR_INICIAL_CILINDRO (ID_GLOBALNET_UNIDAD, FECHAHORA)
    - ID_GLOBALNET_UNIDAD: PARAM.ID_GLOBALNET_UNIDAD
    - FECHAHORA: PARAM.FECHAHORA

#### Retorno

- N/A

#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.VALIDAR_SUPERVISOR.NO_SUPERVISOR
- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD.CONSTRUCTOR.UNIDAD_INEXISTENTE
- GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.VALIDAR_INICIAL_CILINDRO.FECHAHORA_INVALIDA

+ Attributes
    - ID_GLOBALNET_UNIDAD
    - FECHAHORA

### VALIDAR_FINAL_CILINDRO [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD

#### Acciones

- TRY
    - $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].VALIDAR_SUPERVISOR ()
    - o_UNIDAD = NEW UNIDAD (ID_GLOBALNET)
        - ID_GLOBALNET: PARAM.ID_GLOBALNET_UNIDAD
- CATCH
    - RETHROW
- IF substr(PARAM.FECHAHORA, 0, 10) != date('Y-m-d')
    - THROW GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.VALIDAR_FINAL_CILINDRO.FECHAHORA_INVALIDA La fechahora especificada no corresponde al dia actual
- GLOBAL_GAS.BE:C3.STEP.OPE.LIQUIDACIONES.VALIDAR_FINAL_CILINDRO (ID_GLOBALNET_UNIDAD, FECHAHORA)
    - ID_GLOBALNET_UNIDAD: PARAM.ID_GLOBALNET_UNIDAD
    - FECHAHORA: PARAM.FECHAHORA

#### Retorno

- N/A

#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.VALIDAR_SUPERVISOR.NO_SUPERVISOR
- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD.CONSTRUCTOR.UNIDAD_INEXISTENTE
- GLOBAL_GAS.BE:C2.COMMAND.OPE.LIQUIDACIONES.VALIDAR_FINAL_CILINDRO.FECHAHORA_INVALIDA

+ Attributes
    - ID_GLOBALNET_UNIDAD
    - FECHAHORA

## OPE.SINCRONIZACION_GLOBALNET [/ope.sincronizacion_globalnet]

### INICIAR_AGENTE_DESCARGA [POST]

#### Acciones

- IF NOT trim(shell_exec("pgrep -f \"GLOBAL_GAS.BE:C1.ACTION.OPE.SINCRONIZACION_GLOBALNET.EJECUTAR_AGENTE_DESCARGA {PARAM.INSTANCIA}\""))
    - shell_exec("php index.php GLOBAL_GAS.BE:C1.ACTION.OPE.SINCRONIZACION_GLOBALNET.EJECUTAR_AGENTE_DESCARGA {PARAM.INSTANCIA} > /dev/null &")

#### Retorno

- N/A

+ Attributes
    - INSTANCIA

### INICIAR_AGENTE_CARGA [POST]

#### Acciones

- IF NOT trim(shell_exec("pgrep -f \"GLOBAL_GAS.BE:C1.ACTION.OPE.SINCRONIZACION_GLOBALNET.EJECUTAR_AGENTE_CARGA {PARAM.INSTANCIA}\""))
    - shell_exec("php index.php GLOBAL_GAS.BE:C1.ACTION.OPE.SINCRONIZACION_GLOBALNET.EJECUTAR_AGENTE_CARGA {PARAM.INSTANCIA} > /dev/null &")

#### Retorno

- N/A

+ Attributes
    - INSTANCIA

### EJECUTAR_AGENTE_DESCARGA [POST]

#### Acciones

- WHILE TRUE
    - IF m_DETALLES = GLOBAL_GAS.BE:C2.LIBRARY.GLOBALNET.DESCARGAR_SINCRONIZACION ()
        - FOREACH m_DETALLES AS m_UN_DETALLE
            - SWITCH m_UN_DETALLE.TIPO
                - CASE 'EMPLEADOS.AGREGAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.EMPLEADOS.AGREGAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, NOMBRE, NUMERO, TELEFONO, IMAGEN)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - NOMBRE: m_UN_DETALLE.NOMBRE
                        - NUMERO: m_UN_DETALLE.NUMERO
                        - TELEFONO: m_UN_DETALLE.TELEFONO
                        - IMAGEN: m_UN_DETALLE.IMAGEN
                - CASE 'EMPLEADOS.ACTUALIZAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.EMPLEADOS.ACTUALIZAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, NOMBRE, NUMERO, TELEFONO, IMAGEN)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - NOMBRE: m_UN_DETALLE.NOMBRE
                        - NUMERO: m_UN_DETALLE.NUMERO
                        - TELEFONO: m_UN_DETALLE.TELEFONO
                        - IMAGEN: m_UN_DETALLE.IMAGEN
                - CASE 'UNIDADES.AGREGAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.UNIDADES.AGREGAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, NUMERO_ECONOMICO, ID_CHOFER, ID_AYUDANTE, ID_AYUDANTE_2, ID_RUTA, TIPO_UNIDAD, CUENTALITROS, ROTOGAUGE, DOTACION)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - NUMERO_ECONOMICO: m_UN_DETALLE.NUMERO_ECONOMICO
                        - ID_CHOFER: m_UN_DETALLE.ID_CHOFER
                        - ID_AYUDANTE: m_UN_DETALLE.ID_AYUDANTE
                        - ID_AYUDANTE_2: m_UN_DETALLE.ID_AYUDANTE_2
                        - ID_RUTA: m_UN_DETALLE.ID_RUTA
                        - TIPO_UNIDAD: m_UN_DETALLE.TIPO_UNIDAD
                        - CUENTALITROS: m_UN_DETALLE.CUENTALITROS
                        - ROTOGAUGE: m_UN_DETALLE.ROTOGAUGE
                        - DOTACION: m_UN_DETALLE.DOTACION
                - CASE 'UNIDADES.ACTUALIZAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.UNIDADES.ACTUALIZAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, NUMERO_ECONOMICO, ID_CHOFER, ID_AYUDANTE, ID_AYUDANTE_2, ID_RUTA, TIPO_UNIDAD, CUENTALITROS, ROTOGAUGE, DOTACION)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - NUMERO_ECONOMICO: m_UN_DETALLE.NUMERO_ECONOMICO
                        - ID_CHOFER: m_UN_DETALLE.ID_CHOFER
                        - ID_AYUDANTE: m_UN_DETALLE.ID_AYUDANTE
                        - ID_AYUDANTE_2: m_UN_DETALLE.ID_AYUDANTE_2
                        - ID_RUTA: m_UN_DETALLE.ID_RUTA
                        - TIPO_UNIDAD: m_UN_DETALLE.TIPO_UNIDAD
                        - CUENTALITROS: m_UN_DETALLE.CUENTALITROS
                        - ROTOGAUGE: m_UN_DETALLE.ROTOGAUGE
                        - DOTACION: m_UN_DETALLE.DOTACION
                - CASE 'PRECIOS.AGREGAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.PRECIOS.AGREGAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, INDICE, PRODUCTO, ANIO, MES, PRECIO_NETO)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - INDICE: m_UN_DETALLE.NOMBRE
                        - PRODUCTO: m_UN_DETALLE.NUMERO
                        - ANIO: m_UN_DETALLE.TELEFONO
                        - MES: m_UN_DETALLE.IMAGEN
                        - PRECIO_NETO: m_UN_DETALLE.PRECIO_NETO
                - CASE 'PRECIOS.ACTUALIZAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.PRECIOS.ACTUALIZAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, INDICE, PRODUCTO, ANIO, MES, PRECIO_NETO)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - INDICE: m_UN_DETALLE.NOMBRE
                        - PRODUCTO: m_UN_DETALLE.NUMERO
                        - ANIO: m_UN_DETALLE.TELEFONO
                        - MES: m_UN_DETALLE.IMAGEN
                        - PRECIO_NETO: m_UN_DETALLE.PRECIO_NETO
                - CASE 'SERVICIOS.AGREGAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.SERVICIOS.AGREGAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, CLIENTE, CUENTA, CUENTA_OCULTA, ID_GLOBALNET_UNIDAD, TIPO_SERVICIO, FECHA_PROGRAMADO, ESTATUS, DOMICILIO, INDICE, DESCUENTO, APLICA_CREDITO)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - CLIENTE: m_UN_DETALLE.CLIENTE
                        - CUENTA: m_UN_DETALLE.CUENTA
                        - CUENTA_OCULTA: m_UN_DETALLE.CUENTA_OCULTA
                        - ID_GLOBALNET_UNIDAD: m_UN_DETALLE.ID_GLOBALNET_UNIDAD
                        - TIPO_SERVICIO: m_UN_DETALLE.TIPO_SERVICIO
                        - FECHA_PROGRAMADO: m_UN_DETALLE.FECHA_PROGRAMADO
                        - ESTATUS: m_UN_DETALLE.ESTATUS
                        - DOMICILIO: m_UN_DETALLE.DOMICILIO
                        - INDICE: m_UN_DETALLE.INDICE
                        - DESCUENTO: m_UN_DETALLE.DESCUENTO
                        - APLICA_CREDITO: m_UN_DETALLE.APLICA_CREDITO
                - CASE 'SERVICIOS.ACTUALIZAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.SERVICIOS.ACTUALIZAR (ID_GLOBALNET, FECHA_ULTIMA_MODIFICACION, CLIENTE, CUENTA, CUENTA_OCULTA, ID_GLOBALNET_UNIDAD, TIPO_SERVICIO, FECHA_PROGRAMADO, ESTATUS, DOMICILIO, INDICE, DESCUENTO, APLICA_CREDITO)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - FECHA_ULTIMA_MODIFICACION: m_UN_DETALLE.FECHA_ULTIMA_MODIFICACION
                        - CLIENTE: m_UN_DETALLE.CLIENTE
                        - CUENTA: m_UN_DETALLE.CUENTA
                        - CUENTA_OCULTA: m_UN_DETALLE.CUENTA_OCULTA
                        - ID_GLOBALNET_UNIDAD: m_UN_DETALLE.ID_GLOBALNET_UNIDAD
                        - TIPO_SERVICIO: m_UN_DETALLE.TIPO_SERVICIO
                        - FECHA_PROGRAMADO: m_UN_DETALLE.FECHA_PROGRAMADO
                        - ESTATUS: m_UN_DETALLE.ESTATUS
                        - DOMICILIO: m_UN_DETALLE.DOMICILIO
                        - INDICE: m_UN_DETALLE.INDICE
                        - DESCUENTO: m_UN_DETALLE.DESCUENTO
                        - APLICA_CREDITO: m_UN_DETALLE.APLICA_CREDITO
                - CASE 'CUENTAS_OCULTAS.AGREGAR'
                    - GLOBAL_GAS.BE:C3.STEP.CAT.CUENTAS_OCULTAS.AGREGAR (ID_GLOBALNET, CUENTA_OCULTA, FECHAHORA, ID_GLOBALNET_UNIDAD, ESTATUS)
                        - ID_GLOBALNET: m_UN_DETALLE.ID_GLOBALNET
                        - CUENTA_OCULTA: m_UN_DETALLE.CUENTA_OCULTA
                        - FECHAHORA: m_UN_DETALLE.FECHAHORA
                        - ID_GLOBALNET_UNIDAD: m_UN_DETALLE.ID_GLOBALNET_UNIDAD
                        - ESTATUS: m_UN_DETALLE.ESTATUS
    - GLOBAL_GAS.BE:C3.STEP.OPE.CONF_GENERAL.ACTUALIZAR_SINCRONIZACION_GLOBALNET_FECHA_DESCARGA (FECHAHORA)
        - FECHAHORA: date()
    - SLEEP 60

#### Retorno

- N/A

### EJECUTAR_AGENTE_CARGA [POST]

#### Acciones

- WHILE TRUE
    - IF r_DETALLES = QUERY - SELECT COL_GLO_ID, COL_GLO_DETALLES FROM dat_cola_globalnet
        - WHILE a_UN_DETALLE = fetch_array(r_DETALLES)
            - m_DETALLES[a_UN_DETALLE.COL_GLO_ID] = json_decode(a_UN_DETALLE.COL_GLO_DETALLES, TRUE)
        - GLOBAL_GAS.BE:C3.STEP.OPE.GLOBALNET.CARGAR_SINCRONIZACION (DETALLES)
            - DETALLES: m_DETALLES
    - SLEEP 60

#### Retorno

- N/A

## CON.EMPLEADOS [/con.empleados]

### OBTENER_APIKEY [POST]

#### Librerias

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO

#### Acciones

- TRY
    - o_EMPLEADO = NEW EMPLEADO (NUMERO)
        - NUMERO: PARAM.EMPLEADO
    - o_EMPLEADO.VALIDAR_CONTRASENA (CONTRASENA)
        - CONTRASENA: PARAM.CONTRASENA
- CATCH
    - RETHROW

#### Retorno

- o_EMPLEADO.APIKEY

#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.CONSTRUCTOR.NUMERO_INEXISTENTE
- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.VALIDAR_CONTRASENA.CONTRASENA_INCORRECTA

+ Attributes
    - EMPLEADO
    - CONTRASENA

### CONSULTAR [POST]

#### Acciones

- m_EMPLEADO = {NOMBRE: $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].NOMBRE, NUMERO: $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].NUMERO, TELEFONO: $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].TELEFONO, PERFIL: $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].PERFIL}
- m_EMPLEADO.ID_GLOBALNET_UNIDAD = $GLOBALS['SYSTEM']['SECURITY']['UNIDAD'].ID_GLOBALNET
- m_EMPLEADO.TIPO_UNIDAD = $GLOBALS['SYSTEM']['SECURITY']['UNIDAD'].TIPO_UNIDAD
- m_EMPLEADO.IMAGEN = trim(file_get_contents('usr/img/empleados/{$GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].ID_GLOBALNET}_perfil_cuadrado.dat'))

#### Retorno

- m_EMPLEADO
    - NOMBRE
    - NUMERO
    - TELEFONO
    - IMAGEN
    - PERFIL
    - ID_GLOBALNET_UNIDAD
    - TIPO_UNIDAD

## CON.UNIDADES [/con.unidades]

### CONSULTAR [POST]

#### Acciones

- TRY
    - $GLOBALS['SYSTEM']['SECURITY']['EMPLEADO'].VALIDAR_SUPERVISOR ()
- CATCH
    - RETHROW
- IF r_UNIDADES = QUERY - SELECT UNI_ID_GLOBALNET, UNI_NUMERO_ECONOMICO, UNI_TIPO_UNIDAD FROM cat_unidades
    - WHILE a_UNA_UNIDAD = fetch_array(r_UNIDADES)
        - m_UNIDADES[] = {ID_GLOBALNET: a_UNA_UNIDAD.UNI_ID_GLOBALNET, NUMERO_ECONOMICO: a_UNA_UNIDAD.UNI_NUMERO_ECONOMICO, TIPO_UNIDAD: a_UNA_UNIDAD.UNI_TIPO_UNIDAD}

#### Retorno

- m_UNIDADES
    - []
        - ID_GLOBALNET
        - NUMERO_ECONOMICO
        - TIPO_UNIDAD

#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.EMPLEADO.VALIDAR_SUPERVISOR.NO_SUPERVISOR

## CON.SINCRONIZACION_APLICACION [/con.sincronizacion_aplicacion]

### DESCARGAR [POST]

#### Acciones

- m_DETALLES.FECHAHORA = QUERY - SELECT GEN_VALOR FROM conf_general WHERE GEN_PARAMETRO='SINCRONIZACION_GLOBALNET_FECHA_ULTIMA_DESCARGA' 
- m_DETALLES.DETALLES = []
- IF r_DETALLES = QUERY - SELECT COL_APL_ID, COL_APL_DETALLES FROM dat_cola_aplicacion WHERE (COL_APL_ID_GLOBALNET_UNIDAD='$GLOBALS['SYSTEM']['SECURITY']['UNIDAD'].ID_GLOBALNET' OR COL_APL_ID_GLOBALNET_UNIDAD='0') AND COL_APL_ID>'PARAM.A_PARTIR_DE'
    - WHILE a_UN_DETALLE = fetch_array(r_DETALLES)
        - m_DETALLES.DETALLES.{a_UN_DETALLE.COL_APL_ID} = json_decode(a_UN_DETALLE.COL_APL_DETALLES, TRUE)

#### Retorno

- m_DETALLES

+ Atributes
    - A_PARTIR_DE

## CON.LIQUIDACIONES [/con.liquidaciones]

### CONSULTAR [POST]

#### Acciones

- TRY
    - o_UNIDAD = NEW UNIDAD (ID_GLOBALNET)
        - ID_GLOBALNET: PARAM.ID_GLOBALNET_UNIDAD
- CATCH
    - RETHROW
- IF a_LIQUIDACION = QUERY - SELECT LIQ_VIAJE, LIQ_DETALLES FROM dat_liquidaciones WHERE LIQ_ID_GLOBALNET_UNIDAD='PARAM.ID_GLOBALNET_UNIDAD' AND LIQ_FECHA=CURDATE() AND LIQ_ESTATUS='ABIERTA'
    - IF o_UNIDAD.TIPO_UNIDAD == 'ESTACIONARIO'
        - m_LIQ_DETALLES = json_decode(a_LIQUIDACION.LIQ_DETALLES, TRUE)
        - IF isset(m_LIQ_DETALLES.ESTACIONARIO.MEDIDOR_INICIAL) && isset(m_LIQ_DETALLES.ESTACIONARIO.ROTOGAUGE_INICIAL)
            - m_LIQUIDACION.SALIO_CON.MEDIDOR = m_LIQ_DETALLES.ESTACIONARIO.MEDIDOR_INICIAL
            - m_LIQUIDACION.SALIO_CON.ROTOGAUGE = m_LIQ_DETALLES.ESTACIONARIO.ROTOGAUGE_INICIAL
            - m_LIQUIDACION.REGRESO_CON.MEDIDOR = ''
            - m_LIQUIDACION.REGRESO_CON.ROTOGAUGE = ''
        - ELSE
            - m_LIQUIDACION.SALIO_CON.MEDIDOR = o_UNIDAD.CUENTALITROS
            - m_LIQUIDACION.SALIO_CON.ROTOGAUGE = o_UNIDAD.ROTOGAUGE
    - ELSE
        - m_LIQUIDACION.SALIO_CON = o_UNIDAD.DOTACION
        - m_VENTA = QUERY - SELECT SUM(NOT_REFERENCIA->>'$.CANTIDAD_10') AS CANTIDAD_10, SUM(NOT_REFERENCIA->>'$.CANTIDAD_20') AS CANTIDAD_20, SUM(NOT_REFERENCIA->>'$.CANTIDAD_30') AS CANTIDAD_30, SUM(NOT_REFERENCIA->>'$.CANTIDAD_45') AS CANTIDAD_45 FROM dat_notas WHERE NOT_ID_GLOBALNET_UNIDAD='PARAM.ID_GLOBALNET_UNIDAD' AND NOT_VIAJE='a_LIQUIDACION.LIQ_VIAJE' AND NOT_FECHAHORA BETWEEN CURDATE() AND CURDATE() + INTERVAL 1 DAY
        - FOREACH array_keys(o_UNIDAD.DOTACION) AS e_KEY
            - m_LIQUIDACION.REGRESO_CON.e_KEY = o_UNIDAD.DOTACION.e_KEY - m_VENTA.e_KEY
- ELSE
    - IF o_UNIDAD.TIPO_UNIDAD == 'ESTACIONARIO'
        - m_LIQUIDACION.SALIO_CON.MEDIDOR = o_UNIDAD.CUENTALITROS
        - m_LIQUIDACION.SALIO_CON.ROTOGAUGE = o_UNIDAD.ROTOGAUGE
    - ELSE
        - m_LIQUIDACION.SALIO_CON = o_UNIDAD.DOTACION

#### Retorno

- m_LIQUIDACION
    - SALIO_CON
        - MEDIDOR
        - ROTOGAUGE
    - REGRESO_CON
        - MEDIDOR
        - ROTOGAUGE

- m_LIQUIDACION
    - SALIO_CON
        - CANTIDAD_10
        - CANTIDAD_20
        - CANTIDAD_30
        - CANTIDAD_45
    - REGRESO_CON
        - CANTIDAD_10
        - CANTIDAD_20
        - CANTIDAD_30
        - CANTIDAD_45


#### Excepciones

- GLOBAL_GAS.BE:C2.LIBRARY.UNIDAD.CONSTRUCTOR.UNIDAD_INEXISTENTE

+ Atributes
    - ID_GLOBALNET_UNIDAD
